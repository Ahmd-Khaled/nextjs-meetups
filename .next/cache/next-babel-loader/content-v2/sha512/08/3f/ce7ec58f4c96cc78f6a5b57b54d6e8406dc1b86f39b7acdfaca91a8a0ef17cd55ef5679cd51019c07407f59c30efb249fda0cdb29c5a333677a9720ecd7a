{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\Max React Project\\\\Chapter23\\\\meetups\\\\pages\\\\[meetupId]\\\\index.js\";\n// our-domain.com/new-meetup/details\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MeetupDetails;\n;\n;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["F:/Max React Project/Chapter23/meetups/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;AAAA;AAEA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAGA,KAAK,CAACC,UAAN,CAAiBC,KAD7B;AAEI,IAAA,KAAK,EAAGF,KAAK,CAACC,UAAN,CAAiBE,KAF7B;AAGI,IAAA,OAAO,EAAGH,KAAK,CAACC,UAAN,CAAiBG,OAH/B;AAII,IAAA,WAAW,EAAGJ,KAAK,CAACC,UAAN,CAAiBI;AAJnC;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;KATQN,a;AASR;AAmBA;;AA6BD,eAAeA,aAAf","sourcesContent":["// our-domain.com/new-meetup/details\r\nimport { MongoClient, ObjectId } from 'mongodb';\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\n\r\nfunction MeetupDetails(props) {\r\n    return (\r\n        <MeetupDetail\r\n            image= {props.meetupData.image}\r\n            title= {props.meetupData.title}\r\n            address= {props.meetupData.address}\r\n            description= {props.meetupData.description}\r\n        />\r\n    );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n    // const client = await MongoClient.connect('mongodb+srv://ahmed2200716:01117494780@cluster0.xh3vy.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const client = await MongoClient.connect('mongodb+srv://ahmed2200716:01117494780@cluster0.iluostq.mongodb.net/meetups?retryWrites=true&w=majority');\r\n\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n    client.close();\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({\r\n            params: { meetupId: meetup._id.toString() },\r\n        })),\r\n    };\r\n};\r\n\r\nexport async function getStaticProps(context) {\r\n    // fetch data for a single meetup\r\n    const meetupId = context.params.meetupId;\r\n    \r\n    // const client = await MongoClient.connect('mongodb+srv://ahmed2200716:01117494780@cluster0.xh3vy.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const client = await MongoClient.connect('mongodb+srv://ahmed2200716:01117494780@cluster0.iluostq.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const selectedMeetup = await meetupsCollection.findOne({_id: ObjectId(meetupId)})\r\n\r\n    client.close();\r\n\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                id: selectedMeetup._id.toString(),\r\n                title: selectedMeetup.title,\r\n                address: selectedMeetup.address,\r\n                image: selectedMeetup.image,\r\n                description: selectedMeetup.description,\r\n            },\r\n        }\r\n    }\r\n}\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}